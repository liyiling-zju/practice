1-beamer
大家好,我是张老师的研究生谭焱.今天我要讲的是我的三维布尔运算的程序实现设计思路.

2-beamer
这是我今天要讲的三部分,第一个是目标: 要实现的数学概念;第二个是主要内容: 怎么用c++实现; 最后见到简单的测试想法.

3-beamer
首先看看要实现的数学概念的定义.三维空间中的yin集是二维的推广,是一个regular open semianalytic set 并且边界有界.
布尔运算中0算子和1算子得空集和R^3全空间.我们需要实现求补,求交然后求并运算可以通过交补操作实现.

4-beamer
怎么在程序中表示yin集这个数学概念呢.和二维一样用它的边界表示.三维Yin集的边界是有向曲面的集合,这里有二维类似的包含关系哈斯图.我在曲面上取数据点作为空间三角形的顶点,三角形粘在一起模拟yin集边界.如此,模拟Yin集边界的三角形集合和Yin集本身形成一个双射即通过在程序中存储所有空间三角形来表示一个yin集.并且通过这种转化把三维问题简化为二维问题.

5-beamer
这一页是我为了表示yin集和布尔运算所需要的数学定义到类的转化.如下有

6-beamer
上一页讲了我的类,这里要说一下我的类之间的一些关系,有has a 也有 is a.

7-beamer
这就是我的UML类图,每个类内部有一些必要的函数,

8-beamer
有了类和数据结构表示yin集之后考虑怎么实现布尔运算.由之前的讨论已知只需要实现补运算和交运算.补运算可以通过改变yin集边界的方向实现,即改变表示它的所有空间三角形的方向.
交运算可以通过以下5步完成:
首先,计算所有三角形的交线和交点,这些新的线段和原本三角形的边组成一个平面图形;
下一步对每个平面图形进行三角划分,使得每个单独的planar都是三角形;
第三步,对每个空间三角形取重心必在该三角形内部.和二维类似从重心出发一条射线计算交点得到该三角形在交运算后是否还是yin集边界的一部分;
第四步,将所有还存在的三角形粘起来形成一些面,唯一地表示交运算产生的三维yin集;
最后和二维一样建立哈斯图来记录这些面之间的包含关系.
上面说到的5个操作,第一步是简单的,第三步和第五步和二维的类似,第二步计算几何第三章有详细的算法介绍,这里就讲一下第四步该怎么粘.

9-beamer
使用一个栈st,st的成员是表示三角形的planar类.(vector迭代器会失效)
st一开始是空的.选一个还没有被粘的三角形压入.
然后从st压出一个三角形t,
从t共享一条边的三角形中寻找还没有粘起来过并且应该和t粘在一起的三角形.
把这些三角形压入st,并存储起来.
如果没有满足的三角形回到第一小步
如果st变成空集了,存储的三角形一起构造一个face类,返回最开始.
一直循环直到所有的三角形已经被粘起来了.

10-beamer
上面说到了应该粘起来,那么需要定义什么样的三角形应该和t粘起来.
分两步,首先选定t的一条边e.
以e为旋转轴,将t按t的法向量的反方向旋转,直到与另一个也以e为边的三角形t1共面,t1就是应该与t粘起来的三角形.这里的正确性需要用到yin集边界的regular open和半解析.

11-beamer
程序完成后测试,我准备用的测试数据是球面,环面和多环面.
测试方式是以obj格式输入,计算交并补后输出obj文件,用光线追踪法渲染视觉检验是否符合要求.

12-beamer
最后,我的程序有几个漏洞.比如我是完全按几何直觉编写的程序,没有严格数学证明的正确性保证,而且还有效率问题也没有考虑,比如三角形求交都是全部循环,还有我的想象力匮乏,测试数据也比较少.
