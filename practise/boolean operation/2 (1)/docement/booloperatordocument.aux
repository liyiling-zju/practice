\relax 
\providecommand\tcolorbox@label[2]{}
\@writefile{toc}{\contentsline {chapter}{\numberline {0}Preliminaries}{1}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{toc}{\contentsline {section}{\numberline {0.1}\heiti 数学概念的c++包装}{1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {0.1.1}点 class Point}{1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {0.1.2}线段 class Line}{2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {0.1.3}Jordan线 class Jordanline}{2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {0.1.4}Spajor 与Yin集一一对应 class Spajor}{3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {0.1.5}哈斯图存储结构 HassNode}{3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {0.1.6}数据存储结构平衡二叉树 template<class T> class AVLTree}{3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {0.1.7}扫描线 class sweepline}{4}}
\@writefile{toc}{\contentsline {section}{\numberline {0.2}\heiti 类之间的关系，UML类图}{4}}
\@writefile{toc}{\contentsline {section}{\numberline {0.3}\heiti 算法设计与证明}{4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {0.3.1}Point}{4}}
\@writefile{toc}{\contentsline {subsubsection}{Point::operator[](const int)}{4}}
\@writefile{toc}{\contentsline {paragraph}{契约}{4}}
\@writefile{toc}{\contentsline {subparagraph}{input}{4}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces 以上所有类的关系的UML图}}{5}}
\@writefile{toc}{\contentsline {subparagraph}{output}{6}}
\@writefile{toc}{\contentsline {subparagraph}{precondition}{6}}
\@writefile{toc}{\contentsline {subparagraph}{postcondition}{6}}
\@writefile{toc}{\contentsline {paragraph}{算法实现}{6}}
\@writefile{toc}{\contentsline {paragraph}{证明}{6}}
\@writefile{toc}{\contentsline {subsubsection}{Point::norm()}{6}}
\@writefile{toc}{\contentsline {paragraph}{契约}{6}}
\@writefile{toc}{\contentsline {subparagraph}{input}{6}}
\@writefile{toc}{\contentsline {subparagraph}{output}{6}}
\@writefile{toc}{\contentsline {subparagraph}{precondition}{6}}
\@writefile{toc}{\contentsline {subparagraph}{postcondition}{6}}
\@writefile{toc}{\contentsline {paragraph}{算法实现}{6}}
\@writefile{toc}{\contentsline {paragraph}{证明}{6}}
\@writefile{toc}{\contentsline {subsubsection}{Point::operator-(const Point)}{6}}
\@writefile{toc}{\contentsline {paragraph}{契约}{6}}
\@writefile{toc}{\contentsline {subparagraph}{input}{6}}
\@writefile{toc}{\contentsline {subparagraph}{output}{6}}
\@writefile{toc}{\contentsline {subparagraph}{precondition}{6}}
\@writefile{toc}{\contentsline {subparagraph}{postcondition}{6}}
\@writefile{toc}{\contentsline {paragraph}{算法实现}{6}}
\@writefile{toc}{\contentsline {paragraph}{证明}{7}}
\@writefile{toc}{\contentsline {subsubsection}{Point::operator<(const Point)}{7}}
\@writefile{toc}{\contentsline {paragraph}{契约}{7}}
\@writefile{toc}{\contentsline {subparagraph}{input}{7}}
\@writefile{toc}{\contentsline {subparagraph}{output}{7}}
\@writefile{toc}{\contentsline {subparagraph}{precondition}{7}}
\@writefile{toc}{\contentsline {subparagraph}{postcondition}{7}}
\@writefile{toc}{\contentsline {paragraph}{算法实现}{7}}
\@writefile{toc}{\contentsline {paragraph}{证明}{7}}
\@writefile{toc}{\contentsline {subsubsection}{Point::operator>(const Point)}{7}}
\@writefile{toc}{\contentsline {subsubsection}{Point::dot(const Point)}{7}}
\@writefile{toc}{\contentsline {paragraph}{契约}{7}}
\@writefile{toc}{\contentsline {subparagraph}{input}{7}}
\@writefile{toc}{\contentsline {subparagraph}{output}{7}}
\@writefile{toc}{\contentsline {subparagraph}{precondition}{7}}
\@writefile{toc}{\contentsline {subparagraph}{postcondition}{8}}
\@writefile{toc}{\contentsline {paragraph}{算法实现}{8}}
\@writefile{toc}{\contentsline {paragraph}{证明}{8}}
\@writefile{toc}{\contentsline {subsubsection}{Point::cross(const Point)}{8}}
\@writefile{toc}{\contentsline {paragraph}{契约}{8}}
\@writefile{toc}{\contentsline {subparagraph}{input}{8}}
\@writefile{toc}{\contentsline {subparagraph}{output}{8}}
\@writefile{toc}{\contentsline {subparagraph}{precondition}{8}}
\@writefile{toc}{\contentsline {subparagraph}{postcondition}{8}}
\@writefile{toc}{\contentsline {paragraph}{算法实现}{8}}
\@writefile{toc}{\contentsline {paragraph}{证明}{8}}
\@writefile{toc}{\contentsline {subsubsection}{friend template<> operator<(const pair<double, int>,const pair<double,int>)}{8}}
\@writefile{toc}{\contentsline {paragraph}{契约}{8}}
\@writefile{toc}{\contentsline {subparagraph}{input}{8}}
\@writefile{toc}{\contentsline {subparagraph}{output}{8}}
\@writefile{toc}{\contentsline {subparagraph}{precondition}{8}}
\@writefile{toc}{\contentsline {subparagraph}{postcondition}{8}}
\@writefile{toc}{\contentsline {paragraph}{算法实现}{8}}
\@writefile{toc}{\contentsline {paragraph}{证明}{8}}
\@writefile{toc}{\contentsline {subsubsection}{Point::nextline(const Line)}{9}}
\@writefile{toc}{\contentsline {paragraph}{契约}{9}}
\@writefile{toc}{\contentsline {subparagraph}{input}{9}}
\@writefile{toc}{\contentsline {subparagraph}{output}{9}}
\@writefile{toc}{\contentsline {subparagraph}{precondition}{9}}
\@writefile{toc}{\contentsline {subparagraph}{postcondition}{9}}
\@writefile{toc}{\contentsline {paragraph}{算法实现}{9}}
\@writefile{toc}{\contentsline {paragraph}{证明}{11}}
\@writefile{toc}{\contentsline {subsubsection}{Point::addnearline(const Line)}{11}}
\@writefile{toc}{\contentsline {paragraph}{契约}{11}}
\@writefile{toc}{\contentsline {subparagraph}{input}{11}}
\@writefile{toc}{\contentsline {subparagraph}{output}{11}}
\@writefile{toc}{\contentsline {subparagraph}{precondition}{11}}
\@writefile{toc}{\contentsline {subparagraph}{postcondition}{11}}
\@writefile{toc}{\contentsline {paragraph}{算法实现}{11}}
\@writefile{toc}{\contentsline {paragraph}{证明}{11}}
\@writefile{toc}{\contentsline {subsubsection}{Point::delnearline(const Line)}{11}}
\@writefile{toc}{\contentsline {paragraph}{契约}{11}}
\@writefile{toc}{\contentsline {subparagraph}{input}{11}}
\@writefile{toc}{\contentsline {subparagraph}{output}{11}}
\@writefile{toc}{\contentsline {subparagraph}{precondition}{11}}
\@writefile{toc}{\contentsline {subparagraph}{postcondition}{12}}
\@writefile{toc}{\contentsline {paragraph}{算法实现}{12}}
\@writefile{toc}{\contentsline {paragraph}{证明}{13}}
\@writefile{toc}{\contentsline {subsection}{\numberline {0.3.2}Line}{14}}
\@writefile{toc}{\contentsline {subsubsection}{Line::operator[](const int)}{14}}
\@writefile{toc}{\contentsline {paragraph}{契约}{14}}
\@writefile{toc}{\contentsline {subparagraph}{input}{14}}
\@writefile{toc}{\contentsline {subparagraph}{output}{14}}
\@writefile{toc}{\contentsline {subsubsection}{precondition}{14}}
\@writefile{toc}{\contentsline {subsubsection}{postcondition}{14}}
\@writefile{toc}{\contentsline {paragraph}{算法实现}{14}}
\@writefile{toc}{\contentsline {paragraph}{证明}{14}}
\@writefile{toc}{\contentsline {subsubsection}{Line::operator<(const Line)}{14}}
\@writefile{toc}{\contentsline {paragraph}{契约}{14}}
\@writefile{toc}{\contentsline {subparagraph}{input}{14}}
\@writefile{toc}{\contentsline {subparagraph}{output}{14}}
\@writefile{toc}{\contentsline {subparagraph}{precondition}{14}}
\@writefile{toc}{\contentsline {subparagraph}{postcondition}{14}}
\@writefile{toc}{\contentsline {paragraph}{算法实现}{14}}
\@writefile{toc}{\contentsline {paragraph}{证明}{15}}
\@writefile{toc}{\contentsline {subsubsection}{Line::operator>(const Line)}{15}}
\@writefile{toc}{\contentsline {subsubsection}{Line::ifintheline(const Point)}{15}}
\@writefile{toc}{\contentsline {paragraph}{契约}{15}}
\@writefile{toc}{\contentsline {subparagraph}{input}{15}}
\@writefile{toc}{\contentsline {subparagraph}{output}{15}}
\@writefile{toc}{\contentsline {subparagraph}{precondition}{15}}
\@writefile{toc}{\contentsline {subparagraph}{postcondition}{15}}
\@writefile{toc}{\contentsline {paragraph}{算法实现}{15}}
\@writefile{toc}{\contentsline {paragraph}{证明}{16}}
\@writefile{toc}{\contentsline {subsubsection}{Line::coincide(const Line)}{16}}
\@writefile{toc}{\contentsline {paragraph}{契约}{16}}
\@writefile{toc}{\contentsline {subparagraph}{input}{16}}
\@writefile{toc}{\contentsline {subparagraph}{output}{16}}
\@writefile{toc}{\contentsline {subparagraph}{precondition}{16}}
\@writefile{toc}{\contentsline {subparagraph}{postcondition}{16}}
\@writefile{toc}{\contentsline {paragraph}{算法实现}{16}}
\@writefile{toc}{\contentsline {paragraph}{证明}{16}}
\@writefile{toc}{\contentsline {subsubsection}{Line::ifintersection(const Line)}{17}}
\@writefile{toc}{\contentsline {paragraph}{契约}{17}}
\@writefile{toc}{\contentsline {subparagraph}{input}{17}}
\@writefile{toc}{\contentsline {subparagraph}{output}{17}}
\@writefile{toc}{\contentsline {subparagraph}{precondition}{17}}
\@writefile{toc}{\contentsline {subparagraph}{postcondition}{17}}
\@writefile{toc}{\contentsline {paragraph}{算法实现}{17}}
\@writefile{toc}{\contentsline {paragraph}{证明}{17}}
\@writefile{toc}{\contentsline {subsubsection}{Line::intersection(const Line)}{17}}
\@writefile{toc}{\contentsline {paragraph}{契约}{17}}
\@writefile{toc}{\contentsline {subparagraph}{input}{17}}
\@writefile{toc}{\contentsline {subparagraph}{output}{17}}
\@writefile{toc}{\contentsline {subparagraph}{precondition}{17}}
\@writefile{toc}{\contentsline {subparagraph}{postcondition}{17}}
\@writefile{toc}{\contentsline {paragraph}{算法实现}{17}}
\@writefile{toc}{\contentsline {paragraph}{证明}{18}}
\@writefile{toc}{\contentsline {subsubsection}{Line::angle(const Point)}{18}}
\@writefile{toc}{\contentsline {paragraph}{契约}{18}}
\@writefile{toc}{\contentsline {subparagraph}{input}{18}}
\@writefile{toc}{\contentsline {subparagraph}{output}{18}}
\@writefile{toc}{\contentsline {subparagraph}{precondition}{18}}
\@writefile{toc}{\contentsline {subparagraph}{postcondition}{18}}
\@writefile{toc}{\contentsline {paragraph}{算法实现}{18}}
\@writefile{toc}{\contentsline {paragraph}{证明}{18}}
\@writefile{toc}{\contentsline {subsubsection}{Line类中还有一些访问和修改私有成员：identity，leftline，IfinOtherYinset的成员函数，例如identity()和setidentity()等。}{18}}
\@writefile{toc}{\contentsline {paragraph}{契约}{18}}
\@writefile{toc}{\contentsline {subparagraph}{input}{18}}
\@writefile{toc}{\contentsline {subparagraph}{output}{18}}
\@writefile{toc}{\contentsline {subparagraph}{precondition}{19}}
\@writefile{toc}{\contentsline {subparagraph}{postcondition}{19}}
\@writefile{toc}{\contentsline {paragraph}{算法实现}{19}}
\@writefile{toc}{\contentsline {paragraph}{证明}{19}}
\@writefile{toc}{\contentsline {subsubsection}{static Line::generator()}{19}}
\@writefile{toc}{\contentsline {paragraph}{契约}{19}}
\@writefile{toc}{\contentsline {subparagraph}{input}{19}}
\@writefile{toc}{\contentsline {subparagraph}{output}{19}}
\@writefile{toc}{\contentsline {subparagraph}{precondition}{19}}
\@writefile{toc}{\contentsline {subparagraph}{postcondition}{19}}
\@writefile{toc}{\contentsline {paragraph}{算法实现}{19}}
\@writefile{toc}{\contentsline {paragraph}{证明}{21}}
\@writefile{toc}{\contentsline {subsection}{\numberline {0.3.3}Jordanline}{21}}
\@writefile{toc}{\contentsline {subsubsection}{Jordanline的私有数据：identity，leftjordanline，type的更新函数Jordanline::update()}{21}}
\@writefile{toc}{\contentsline {paragraph}{契约}{21}}
\@writefile{toc}{\contentsline {subparagraph}{input}{21}}
\@writefile{toc}{\contentsline {subparagraph}{output}{21}}
\@writefile{toc}{\contentsline {subparagraph}{precondition}{21}}
\@writefile{toc}{\contentsline {subparagraph}{postcondition}{21}}
\@writefile{toc}{\contentsline {paragraph}{算法实现}{21}}
\@writefile{toc}{\contentsline {paragraph}{证明}{22}}
\@writefile{toc}{\contentsline {subsubsection}{static Jordanline::generator()}{22}}
\@writefile{toc}{\contentsline {paragraph}{契约}{22}}
\@writefile{toc}{\contentsline {subparagraph}{input}{22}}
\@writefile{toc}{\contentsline {subparagraph}{output}{22}}
\@writefile{toc}{\contentsline {subparagraph}{precondition}{22}}
\@writefile{toc}{\contentsline {subparagraph}{postcondition}{22}}
\@writefile{toc}{\contentsline {paragraph}{算法实现}{22}}
\@writefile{toc}{\contentsline {paragraph}{证明}{23}}
\@writefile{toc}{\contentsline {subsection}{\numberline {0.3.4}Spajor}{23}}
\@writefile{toc}{\contentsline {subsubsection}{Spajor::complement()}{23}}
\@writefile{toc}{\contentsline {paragraph}{契约}{23}}
\@writefile{toc}{\contentsline {subparagraph}{input}{23}}
\@writefile{toc}{\contentsline {subparagraph}{output}{23}}
\@writefile{toc}{\contentsline {subparagraph}{precondition}{23}}
\@writefile{toc}{\contentsline {subparagraph}{postcondition}{23}}
\@writefile{toc}{\contentsline {paragraph}{算法实现}{23}}
\@writefile{toc}{\contentsline {paragraph}{证明}{24}}
\@writefile{toc}{\contentsline {subsubsection}{Spajor::meet(Spajor)}{24}}
\@writefile{toc}{\contentsline {paragraph}{契约}{24}}
\@writefile{toc}{\contentsline {subparagraph}{input}{24}}
\@writefile{toc}{\contentsline {subparagraph}{output}{24}}
\@writefile{toc}{\contentsline {subparagraph}{precondition}{24}}
\@writefile{toc}{\contentsline {subparagraph}{postcondition}{24}}
\@writefile{toc}{\contentsline {paragraph}{算法实现}{24}}
\@writefile{toc}{\contentsline {paragraph}{证明}{25}}
\@writefile{toc}{\contentsline {subsubsection}{Spajor::join(Spajor)}{25}}
\@writefile{toc}{\contentsline {paragraph}{契约}{25}}
\@writefile{toc}{\contentsline {subparagraph}{input}{25}}
\@writefile{toc}{\contentsline {subparagraph}{output}{25}}
\@writefile{toc}{\contentsline {subparagraph}{precondition}{25}}
\@writefile{toc}{\contentsline {subparagraph}{postcondition}{25}}
\@writefile{toc}{\contentsline {paragraph}{算法实现}{25}}
\@writefile{toc}{\contentsline {paragraph}{证明}{25}}
\@writefile{toc}{\contentsline {subsubsection}{friend operator<<(ostream\&, Spajor)}{25}}
\@writefile{toc}{\contentsline {paragraph}{契约}{25}}
\@writefile{toc}{\contentsline {subparagraph}{input}{25}}
\@writefile{toc}{\contentsline {subparagraph}{output}{25}}
\@writefile{toc}{\contentsline {subparagraph}{precondition}{25}}
\@writefile{toc}{\contentsline {subparagraph}{postcondition}{25}}
\@writefile{toc}{\contentsline {paragraph}{算法实现}{26}}
\@writefile{toc}{\contentsline {paragraph}{证明}{26}}
\@writefile{toc}{\contentsline {subsubsection}{friend operator>>(istream\&, Spajor)}{26}}
\@writefile{toc}{\contentsline {paragraph}{契约}{26}}
\@writefile{toc}{\contentsline {subparagraph}{input}{26}}
\@writefile{toc}{\contentsline {subparagraph}{output}{26}}
\@writefile{toc}{\contentsline {subparagraph}{precondition}{26}}
\@writefile{toc}{\contentsline {subparagraph}{postcondition}{26}}
\@writefile{toc}{\contentsline {paragraph}{算法实现}{26}}
\@writefile{toc}{\contentsline {paragraph}{证明}{26}}
\@writefile{toc}{\contentsline {subsection}{\numberline {0.3.5}Sweepline}{26}}
\@writefile{toc}{\contentsline {subsubsection}{Sweepline::intersection()}{26}}
\@writefile{toc}{\contentsline {paragraph}{契约}{26}}
\@writefile{toc}{\contentsline {subparagraph}{input}{26}}
\@writefile{toc}{\contentsline {subparagraph}{output}{27}}
\@writefile{toc}{\contentsline {subparagraph}{precondition}{27}}
\@writefile{toc}{\contentsline {subparagraph}{postcondition}{27}}
\@writefile{toc}{\contentsline {paragraph}{算法实现}{27}}
\@writefile{toc}{\contentsline {paragraph}{证明}{30}}
\@writefile{toc}{\contentsline {subsubsection}{Sweepline::inter()}{30}}
\@writefile{toc}{\contentsline {paragraph}{契约}{30}}
\@writefile{toc}{\contentsline {subparagraph}{input}{30}}
\@writefile{toc}{\contentsline {subparagraph}{output}{30}}
\@writefile{toc}{\contentsline {subparagraph}{precondition}{30}}
\@writefile{toc}{\contentsline {subparagraph}{postcondition}{30}}
\@writefile{toc}{\contentsline {paragraph}{算法实现}{30}}
\@writefile{toc}{\contentsline {paragraph}{证明}{34}}
\@writefile{toc}{\contentsline {subsubsection}{Sweepline::update(int, bool, int = -1, bool = true)}{34}}
\@writefile{toc}{\contentsline {paragraph}{契约}{34}}
\@writefile{toc}{\contentsline {subparagraph}{input}{34}}
\@writefile{toc}{\contentsline {subparagraph}{output}{34}}
\@writefile{toc}{\contentsline {subparagraph}{precondition}{34}}
\@writefile{toc}{\contentsline {subparagraph}{postcondition}{34}}
\@writefile{toc}{\contentsline {paragraph}{算法实现}{35}}
\@writefile{toc}{\contentsline {paragraph}{证明}{38}}
\@writefile{toc}{\contentsline {subsection}{\numberline {0.3.6}template<class T> Class AVLTree}{38}}
\@writefile{toc}{\contentsline {subsubsection}{AVLTree::add(T)}{39}}
\@writefile{toc}{\contentsline {paragraph}{契约}{39}}
\@writefile{toc}{\contentsline {subparagraph}{input}{39}}
\@writefile{toc}{\contentsline {subparagraph}{output}{39}}
\@writefile{toc}{\contentsline {subparagraph}{precondition}{39}}
\@writefile{toc}{\contentsline {subparagraph}{postcondition}{39}}
\@writefile{toc}{\contentsline {paragraph}{算法实现}{39}}
\@writefile{toc}{\contentsline {paragraph}{证明}{39}}
\@writefile{toc}{\contentsline {subsubsection}{AVLTree::del(T)}{39}}
\@writefile{toc}{\contentsline {paragraph}{契约}{39}}
\@writefile{toc}{\contentsline {subparagraph}{input}{39}}
\@writefile{toc}{\contentsline {subparagraph}{output}{39}}
\@writefile{toc}{\contentsline {subparagraph}{precondition}{39}}
\@writefile{toc}{\contentsline {subparagraph}{postcondition}{39}}
\@writefile{toc}{\contentsline {paragraph}{算法实现}{39}}
\@writefile{toc}{\contentsline {paragraph}{证明}{39}}
\@writefile{toc}{\contentsline {subsubsection}{AVLTree::del(AVLTreeNode<T>*)}{39}}
\@writefile{toc}{\contentsline {paragraph}{契约}{39}}
\@writefile{toc}{\contentsline {subparagraph}{input}{39}}
\@writefile{toc}{\contentsline {subparagraph}{output}{39}}
\@writefile{toc}{\contentsline {subparagraph}{precondition}{39}}
\@writefile{toc}{\contentsline {subparagraph}{postcondition}{39}}
\@writefile{toc}{\contentsline {paragraph}{算法实现}{40}}
\@writefile{toc}{\contentsline {paragraph}{证明}{40}}
\@writefile{toc}{\contentsline {subsubsection}{AVLTree::find(T)}{40}}
\@writefile{toc}{\contentsline {paragraph}{契约}{40}}
\@writefile{toc}{\contentsline {subparagraph}{input}{40}}
\@writefile{toc}{\contentsline {subparagraph}{output}{40}}
\@writefile{toc}{\contentsline {subparagraph}{precondition}{40}}
\@writefile{toc}{\contentsline {subparagraph}{postcondition}{40}}
\@writefile{toc}{\contentsline {paragraph}{算法实现}{40}}
\@writefile{toc}{\contentsline {paragraph}{证明}{40}}
\@writefile{toc}{\contentsline {subsubsection}{AVLTree::findprevnode(AVLTreeNode<T>*)}{40}}
\@writefile{toc}{\contentsline {paragraph}{契约}{40}}
\@writefile{toc}{\contentsline {subparagraph}{input}{40}}
\@writefile{toc}{\contentsline {subparagraph}{output}{40}}
\@writefile{toc}{\contentsline {subparagraph}{precondition}{40}}
\@writefile{toc}{\contentsline {subparagraph}{postcondition}{40}}
\@writefile{toc}{\contentsline {paragraph}{算法实现}{40}}
\@writefile{toc}{\contentsline {paragraph}{证明}{40}}
\@writefile{toc}{\contentsline {subsubsection}{AVLTree::findnextnode(AVLTreeNode<T>*)}{40}}
\@writefile{toc}{\contentsline {subsubsection}{AVLTree::findfirstnode()}{40}}
\@writefile{toc}{\contentsline {paragraph}{契约}{40}}
\@writefile{toc}{\contentsline {subparagraph}{input}{41}}
\@writefile{toc}{\contentsline {subparagraph}{output}{41}}
\@writefile{toc}{\contentsline {subparagraph}{precondition}{41}}
\@writefile{toc}{\contentsline {subparagraph}{postcondition}{41}}
\@writefile{toc}{\contentsline {subsubsection}{AVLTree::findlastnode()}{41}}
